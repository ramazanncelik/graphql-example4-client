{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport \"./fixPolyfills.js\";\nimport { wrap } from 'optimism';\nimport { equal } from '@wry/equality';\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport { canonicalStringify } from \"./object-canon.js\";\nvar InMemoryCache = function (_super) {\n  __extends(InMemoryCache, _super);\n  function InMemoryCache(config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var _this = _super.call(this) || this;\n    _this.watches = new Set();\n    _this.typenameDocumentCache = new Map();\n    _this.makeVar = makeVar;\n    _this.txCount = 0;\n    _this.config = normalizeConfig(config);\n    _this.addTypename = !!_this.config.addTypename;\n    _this.policies = new Policies({\n      cache: _this,\n      dataIdFromObject: _this.config.dataIdFromObject,\n      possibleTypes: _this.config.possibleTypes,\n      typePolicies: _this.config.typePolicies\n    });\n    _this.init();\n    return _this;\n  }\n  InMemoryCache.prototype.init = function () {\n    var rootStore = this.data = new EntityStore.Root({\n      policies: this.policies,\n      resultCaching: this.config.resultCaching\n    });\n    this.optimisticData = rootStore.stump;\n    this.resetResultCache();\n  };\n  InMemoryCache.prototype.resetResultCache = function (resetResultIdentities) {\n    var _this = this;\n    var previousReader = this.storeReader;\n    var fragments = this.config.fragments;\n    this.storeWriter = new StoreWriter(this, this.storeReader = new StoreReader({\n      cache: this,\n      addTypename: this.addTypename,\n      resultCacheMaxSize: this.config.resultCacheMaxSize,\n      canonizeResults: shouldCanonizeResults(this.config),\n      canon: resetResultIdentities ? void 0 : previousReader && previousReader.canon,\n      fragments: fragments\n    }), fragments);\n    this.maybeBroadcastWatch = wrap(function (c, options) {\n      return _this.broadcastWatch(c, options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey: function (c) {\n        var store = c.optimistic ? _this.optimisticData : _this.data;\n        if (supportsResultCaching(store)) {\n          var optimistic = c.optimistic,\n            id = c.id,\n            variables = c.variables;\n          return store.makeCacheKey(c.query, c.callback, canonicalStringify({\n            optimistic: optimistic,\n            id: id,\n            variables: variables\n          }));\n        }\n      }\n    });\n    new Set([this.data.group, this.optimisticData.group]).forEach(function (group) {\n      return group.resetCaching();\n    });\n  };\n  InMemoryCache.prototype.restore = function (data) {\n    this.init();\n    if (data) this.data.replace(data);\n    return this;\n  };\n  InMemoryCache.prototype.extract = function (optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n    return (optimistic ? this.optimisticData : this.data).extract();\n  };\n  InMemoryCache.prototype.read = function (options) {\n    var _a = options.returnPartialData,\n      returnPartialData = _a === void 0 ? false : _a;\n    try {\n      return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), {\n        store: options.optimistic ? this.optimisticData : this.data,\n        config: this.config,\n        returnPartialData: returnPartialData\n      })).result || null;\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        return null;\n      }\n      throw e;\n    }\n  };\n  InMemoryCache.prototype.write = function (options) {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore(this.data, options);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n  InMemoryCache.prototype.modify = function (options) {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      return false;\n    }\n    var store = options.optimistic ? this.optimisticData : this.data;\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n  InMemoryCache.prototype.diff = function (options) {\n    return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), {\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      config: this.config\n    }));\n  };\n  InMemoryCache.prototype.watch = function (watch) {\n    var _this = this;\n    if (!this.watches.size) {\n      recallCache(this);\n    }\n    this.watches.add(watch);\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n    return function () {\n      if (_this.watches.delete(watch) && !_this.watches.size) {\n        forgetCache(_this);\n      }\n      _this.maybeBroadcastWatch.forget(watch);\n    };\n  };\n  InMemoryCache.prototype.gc = function (options) {\n    canonicalStringify.reset();\n    var ids = this.optimisticData.gc();\n    if (options && !this.txCount) {\n      if (options.resetResultCache) {\n        this.resetResultCache(options.resetResultIdentities);\n      } else if (options.resetResultIdentities) {\n        this.storeReader.resetCanon();\n      }\n    }\n    return ids;\n  };\n  InMemoryCache.prototype.retain = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  };\n  InMemoryCache.prototype.release = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  };\n  InMemoryCache.prototype.identify = function (object) {\n    if (isReference(object)) return object.__ref;\n    try {\n      return this.policies.identify(object)[0];\n    } catch (e) {\n      __DEV__ && invariant.warn(e);\n    }\n  };\n  InMemoryCache.prototype.evict = function (options) {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        return false;\n      }\n      options = __assign(__assign({}, options), {\n        id: \"ROOT_QUERY\"\n      });\n    }\n    try {\n      ++this.txCount;\n      return this.optimisticData.evict(options, this.data);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n  InMemoryCache.prototype.reset = function (options) {\n    var _this = this;\n    this.init();\n    canonicalStringify.reset();\n    if (options && options.discardWatches) {\n      this.watches.forEach(function (watch) {\n        return _this.maybeBroadcastWatch.forget(watch);\n      });\n      this.watches.clear();\n      forgetCache(this);\n    } else {\n      this.broadcastWatches();\n    }\n    return Promise.resolve();\n  };\n  InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n    var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  };\n  InMemoryCache.prototype.batch = function (options) {\n    var _this = this;\n    var update = options.update,\n      _a = options.optimistic,\n      optimistic = _a === void 0 ? true : _a,\n      removeOptimistic = options.removeOptimistic,\n      onWatchUpdated = options.onWatchUpdated;\n    var updateResult;\n    var perform = function (layer) {\n      var _a = _this,\n        data = _a.data,\n        optimisticData = _a.optimisticData;\n      ++_this.txCount;\n      if (layer) {\n        _this.data = _this.optimisticData = layer;\n      }\n      try {\n        return updateResult = update(_this);\n      } finally {\n        --_this.txCount;\n        _this.data = data;\n        _this.optimisticData = optimisticData;\n      }\n    };\n    var alreadyDirty = new Set();\n    if (onWatchUpdated && !this.txCount) {\n      this.broadcastWatches(__assign(__assign({}, options), {\n        onWatchUpdated: function (watch) {\n          alreadyDirty.add(watch);\n          return false;\n        }\n      }));\n    }\n    if (typeof optimistic === 'string') {\n      this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n    } else if (optimistic === false) {\n      perform(this.data);\n    } else {\n      perform();\n    }\n    if (typeof removeOptimistic === \"string\") {\n      this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n    }\n    if (onWatchUpdated && alreadyDirty.size) {\n      this.broadcastWatches(__assign(__assign({}, options), {\n        onWatchUpdated: function (watch, diff) {\n          var result = onWatchUpdated.call(this, watch, diff);\n          if (result !== false) {\n            alreadyDirty.delete(watch);\n          }\n          return result;\n        }\n      }));\n      if (alreadyDirty.size) {\n        alreadyDirty.forEach(function (watch) {\n          return _this.maybeBroadcastWatch.dirty(watch);\n        });\n      }\n    } else {\n      this.broadcastWatches(options);\n    }\n    return updateResult;\n  };\n  InMemoryCache.prototype.performTransaction = function (update, optimisticId) {\n    return this.batch({\n      update: update,\n      optimistic: optimisticId || optimisticId !== null\n    });\n  };\n  InMemoryCache.prototype.transformDocument = function (document) {\n    if (this.addTypename) {\n      var result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  };\n  InMemoryCache.prototype.transformForLink = function (document) {\n    var fragments = this.config.fragments;\n    return fragments ? fragments.transform(document) : document;\n  };\n  InMemoryCache.prototype.broadcastWatches = function (options) {\n    var _this = this;\n    if (!this.txCount) {\n      this.watches.forEach(function (c) {\n        return _this.maybeBroadcastWatch(c, options);\n      });\n    }\n  };\n  InMemoryCache.prototype.broadcastWatch = function (c, options) {\n    var lastDiff = c.lastDiff;\n    var diff = this.diff(c);\n    if (options) {\n      if (c.optimistic && typeof options.optimistic === \"string\") {\n        diff.fromOptimisticTransaction = true;\n      }\n      if (options.onWatchUpdated && options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n        return;\n      }\n    }\n    if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n      c.callback(c.lastDiff = diff, lastDiff);\n    }\n  };\n  return InMemoryCache;\n}(ApolloCache);\nexport { InMemoryCache };","map":{"version":3,"names":["__assign","__extends","invariant","wrap","equal","ApolloCache","MissingFieldError","addTypenameToDocument","isReference","StoreReader","StoreWriter","EntityStore","supportsResultCaching","makeVar","forgetCache","recallCache","Policies","hasOwn","normalizeConfig","shouldCanonizeResults","canonicalStringify","InMemoryCache","_super","config","_this","call","watches","Set","typenameDocumentCache","Map","txCount","addTypename","policies","cache","dataIdFromObject","possibleTypes","typePolicies","init","prototype","rootStore","data","Root","resultCaching","optimisticData","stump","resetResultCache","resetResultIdentities","previousReader","storeReader","fragments","storeWriter","resultCacheMaxSize","canonizeResults","canon","maybeBroadcastWatch","c","options","broadcastWatch","max","makeCacheKey","store","optimistic","id","variables","query","callback","group","forEach","resetCaching","restore","replace","extract","read","_a","returnPartialData","diffQueryAgainstStore","result","e","write","writeToStore","broadcast","broadcastWatches","modify","fields","diff","rootId","watch","size","add","immediate","delete","forget","gc","reset","ids","resetCanon","retain","release","identify","object","__ref","__DEV__","warn","evict","discardWatches","clear","Promise","resolve","removeOptimistic","idToRemove","newOptimisticData","removeLayer","batch","update","onWatchUpdated","updateResult","perform","layer","alreadyDirty","addLayer","dirty","performTransaction","optimisticId","transformDocument","document","get","set","transformForLink","transform","lastDiff","fromOptimisticTransaction"],"sources":["D:/JavaScript/Graphql_Patika/example4/client/node_modules/@apollo/client/cache/inmemory/inMemoryCache.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport \"./fixPolyfills.js\";\nimport { wrap } from 'optimism';\nimport { equal } from '@wry/equality';\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference, } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport { canonicalStringify } from \"./object-canon.js\";\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.makeVar = makeVar;\n        _this.txCount = 0;\n        _this.config = normalizeConfig(config);\n        _this.addTypename = !!_this.config.addTypename;\n        _this.policies = new Policies({\n            cache: _this,\n            dataIdFromObject: _this.config.dataIdFromObject,\n            possibleTypes: _this.config.possibleTypes,\n            typePolicies: _this.config.typePolicies,\n        });\n        _this.init();\n        return _this;\n    }\n    InMemoryCache.prototype.init = function () {\n        var rootStore = this.data = new EntityStore.Root({\n            policies: this.policies,\n            resultCaching: this.config.resultCaching,\n        });\n        this.optimisticData = rootStore.stump;\n        this.resetResultCache();\n    };\n    InMemoryCache.prototype.resetResultCache = function (resetResultIdentities) {\n        var _this = this;\n        var previousReader = this.storeReader;\n        var fragments = this.config.fragments;\n        this.storeWriter = new StoreWriter(this, this.storeReader = new StoreReader({\n            cache: this,\n            addTypename: this.addTypename,\n            resultCacheMaxSize: this.config.resultCacheMaxSize,\n            canonizeResults: shouldCanonizeResults(this.config),\n            canon: resetResultIdentities\n                ? void 0\n                : previousReader && previousReader.canon,\n            fragments: fragments,\n        }), fragments);\n        this.maybeBroadcastWatch = wrap(function (c, options) {\n            return _this.broadcastWatch(c, options);\n        }, {\n            max: this.config.resultCacheMaxSize,\n            makeCacheKey: function (c) {\n                var store = c.optimistic ? _this.optimisticData : _this.data;\n                if (supportsResultCaching(store)) {\n                    var optimistic = c.optimistic, id = c.id, variables = c.variables;\n                    return store.makeCacheKey(c.query, c.callback, canonicalStringify({ optimistic: optimistic, id: id, variables: variables }));\n                }\n            }\n        });\n        new Set([\n            this.data.group,\n            this.optimisticData.group,\n        ]).forEach(function (group) { return group.resetCaching(); });\n    };\n    InMemoryCache.prototype.restore = function (data) {\n        this.init();\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).extract();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        var _a = options.returnPartialData, returnPartialData = _a === void 0 ? false : _a;\n        try {\n            return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, config: this.config, returnPartialData: returnPartialData })).result || null;\n        }\n        catch (e) {\n            if (e instanceof MissingFieldError) {\n                return null;\n            }\n            throw e;\n        }\n    };\n    InMemoryCache.prototype.write = function (options) {\n        try {\n            ++this.txCount;\n            return this.storeWriter.writeToStore(this.data, options);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.modify = function (options) {\n        if (hasOwn.call(options, \"id\") && !options.id) {\n            return false;\n        }\n        var store = options.optimistic\n            ? this.optimisticData\n            : this.data;\n        try {\n            ++this.txCount;\n            return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.diff = function (options) {\n        return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, rootId: options.id || \"ROOT_QUERY\", config: this.config }));\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        if (!this.watches.size) {\n            recallCache(this);\n        }\n        this.watches.add(watch);\n        if (watch.immediate) {\n            this.maybeBroadcastWatch(watch);\n        }\n        return function () {\n            if (_this.watches.delete(watch) && !_this.watches.size) {\n                forgetCache(_this);\n            }\n            _this.maybeBroadcastWatch.forget(watch);\n        };\n    };\n    InMemoryCache.prototype.gc = function (options) {\n        canonicalStringify.reset();\n        var ids = this.optimisticData.gc();\n        if (options && !this.txCount) {\n            if (options.resetResultCache) {\n                this.resetResultCache(options.resetResultIdentities);\n            }\n            else if (options.resetResultIdentities) {\n                this.storeReader.resetCanon();\n            }\n        }\n        return ids;\n    };\n    InMemoryCache.prototype.retain = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).retain(rootId);\n    };\n    InMemoryCache.prototype.release = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).release(rootId);\n    };\n    InMemoryCache.prototype.identify = function (object) {\n        if (isReference(object))\n            return object.__ref;\n        try {\n            return this.policies.identify(object)[0];\n        }\n        catch (e) {\n            __DEV__ && invariant.warn(e);\n        }\n    };\n    InMemoryCache.prototype.evict = function (options) {\n        if (!options.id) {\n            if (hasOwn.call(options, \"id\")) {\n                return false;\n            }\n            options = __assign(__assign({}, options), { id: \"ROOT_QUERY\" });\n        }\n        try {\n            ++this.txCount;\n            return this.optimisticData.evict(options, this.data);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.reset = function (options) {\n        var _this = this;\n        this.init();\n        canonicalStringify.reset();\n        if (options && options.discardWatches) {\n            this.watches.forEach(function (watch) { return _this.maybeBroadcastWatch.forget(watch); });\n            this.watches.clear();\n            forgetCache(this);\n        }\n        else {\n            this.broadcastWatches();\n        }\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n        if (newOptimisticData !== this.optimisticData) {\n            this.optimisticData = newOptimisticData;\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.batch = function (options) {\n        var _this = this;\n        var update = options.update, _a = options.optimistic, optimistic = _a === void 0 ? true : _a, removeOptimistic = options.removeOptimistic, onWatchUpdated = options.onWatchUpdated;\n        var updateResult;\n        var perform = function (layer) {\n            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;\n            ++_this.txCount;\n            if (layer) {\n                _this.data = _this.optimisticData = layer;\n            }\n            try {\n                return updateResult = update(_this);\n            }\n            finally {\n                --_this.txCount;\n                _this.data = data;\n                _this.optimisticData = optimisticData;\n            }\n        };\n        var alreadyDirty = new Set();\n        if (onWatchUpdated && !this.txCount) {\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch) {\n                    alreadyDirty.add(watch);\n                    return false;\n                } }));\n        }\n        if (typeof optimistic === 'string') {\n            this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n        }\n        else if (optimistic === false) {\n            perform(this.data);\n        }\n        else {\n            perform();\n        }\n        if (typeof removeOptimistic === \"string\") {\n            this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n        }\n        if (onWatchUpdated && alreadyDirty.size) {\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch, diff) {\n                    var result = onWatchUpdated.call(this, watch, diff);\n                    if (result !== false) {\n                        alreadyDirty.delete(watch);\n                    }\n                    return result;\n                } }));\n            if (alreadyDirty.size) {\n                alreadyDirty.forEach(function (watch) { return _this.maybeBroadcastWatch.dirty(watch); });\n            }\n        }\n        else {\n            this.broadcastWatches(options);\n        }\n        return updateResult;\n    };\n    InMemoryCache.prototype.performTransaction = function (update, optimisticId) {\n        return this.batch({\n            update: update,\n            optimistic: optimisticId || (optimisticId !== null),\n        });\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.transformForLink = function (document) {\n        var fragments = this.config.fragments;\n        return fragments\n            ? fragments.transform(document)\n            : document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function (options) {\n        var _this = this;\n        if (!this.txCount) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c, options); });\n        }\n    };\n    InMemoryCache.prototype.broadcastWatch = function (c, options) {\n        var lastDiff = c.lastDiff;\n        var diff = this.diff(c);\n        if (options) {\n            if (c.optimistic &&\n                typeof options.optimistic === \"string\") {\n                diff.fromOptimisticTransaction = true;\n            }\n            if (options.onWatchUpdated &&\n                options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n                return;\n            }\n        }\n        if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n            c.callback(c.lastDiff = diff, lastDiff);\n        }\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\n//# sourceMappingURL=inMemoryCache.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}