{"ast":null,"code":"import { __extends } from \"tslib\";\nimport \"../utilities/globals/index.js\";\nimport { isNonEmptyArray } from \"../utilities/index.js\";\nexport function isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n  var message = '';\n  if (isNonEmptyArray(err.graphQLErrors) || isNonEmptyArray(err.clientErrors)) {\n    var errors = (err.graphQLErrors || []).concat(err.clientErrors || []);\n    errors.forEach(function (error) {\n      var errorMessage = error ? error.message : 'Error message not found.';\n      message += \"\".concat(errorMessage, \"\\n\");\n    });\n  }\n  if (err.networkError) {\n    message += \"\".concat(err.networkError.message, \"\\n\");\n  }\n  message = message.replace(/\\n$/, '');\n  return message;\n};\nvar ApolloError = function (_super) {\n  __extends(ApolloError, _super);\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n      clientErrors = _a.clientErrors,\n      networkError = _a.networkError,\n      errorMessage = _a.errorMessage,\n      extraInfo = _a.extraInfo;\n    var _this = _super.call(this, errorMessage) || this;\n    _this.name = 'ApolloError';\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.clientErrors = clientErrors || [];\n    _this.networkError = networkError || null;\n    _this.message = errorMessage || generateErrorMessage(_this);\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n  return ApolloError;\n}(Error);\nexport { ApolloError };","map":{"version":3,"names":["__extends","isNonEmptyArray","isApolloError","err","hasOwnProperty","generateErrorMessage","message","graphQLErrors","clientErrors","errors","concat","forEach","error","errorMessage","networkError","replace","ApolloError","_super","_a","extraInfo","_this","call","name","__proto__","prototype","Error"],"sources":["D:/JavaScript/Graphql_Patika/example4/client/node_modules/@apollo/client/errors/index.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport \"../utilities/globals/index.js\";\nimport { isNonEmptyArray } from \"../utilities/index.js\";\nexport function isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors) || isNonEmptyArray(err.clientErrors)) {\n        var errors = (err.graphQLErrors || [])\n            .concat(err.clientErrors || []);\n        errors.forEach(function (error) {\n            var errorMessage = error\n                ? error.message\n                : 'Error message not found.';\n            message += \"\".concat(errorMessage, \"\\n\");\n        });\n    }\n    if (err.networkError) {\n        message += \"\".concat(err.networkError.message, \"\\n\");\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, clientErrors = _a.clientErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.name = 'ApolloError';\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.clientErrors = clientErrors || [];\n        _this.networkError = networkError || null;\n        _this.message = errorMessage || generateErrorMessage(_this);\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,+BAA+B;AACtC,SAASC,eAAe,QAAQ,uBAAuB;AACvD,OAAO,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC/B,OAAOA,GAAG,CAACC,cAAc,CAAC,eAAe,CAAC;AAC9C;AACA,IAAIC,oBAAoB,GAAG,SAAAA,CAAUF,GAAG,EAAE;EACtC,IAAIG,OAAO,GAAG,EAAE;EAChB,IAAIL,eAAe,CAACE,GAAG,CAACI,aAAa,CAAC,IAAIN,eAAe,CAACE,GAAG,CAACK,YAAY,CAAC,EAAE;IACzE,IAAIC,MAAM,GAAG,CAACN,GAAG,CAACI,aAAa,IAAI,EAAE,EAChCG,MAAM,CAACP,GAAG,CAACK,YAAY,IAAI,EAAE,CAAC;IACnCC,MAAM,CAACE,OAAO,CAAC,UAAUC,KAAK,EAAE;MAC5B,IAAIC,YAAY,GAAGD,KAAK,GAClBA,KAAK,CAACN,OAAO,GACb,0BAA0B;MAChCA,OAAO,IAAI,EAAE,CAACI,MAAM,CAACG,YAAY,EAAE,IAAI,CAAC;IAC5C,CAAC,CAAC;EACN;EACA,IAAIV,GAAG,CAACW,YAAY,EAAE;IAClBR,OAAO,IAAI,EAAE,CAACI,MAAM,CAACP,GAAG,CAACW,YAAY,CAACR,OAAO,EAAE,IAAI,CAAC;EACxD;EACAA,OAAO,GAAGA,OAAO,CAACS,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EACpC,OAAOT,OAAO;AAClB,CAAC;AACD,IAAIU,WAAW,GAAI,UAAUC,MAAM,EAAE;EACjCjB,SAAS,CAACgB,WAAW,EAAEC,MAAM,CAAC;EAC9B,SAASD,WAAWA,CAACE,EAAE,EAAE;IACrB,IAAIX,aAAa,GAAGW,EAAE,CAACX,aAAa;MAAEC,YAAY,GAAGU,EAAE,CAACV,YAAY;MAAEM,YAAY,GAAGI,EAAE,CAACJ,YAAY;MAAED,YAAY,GAAGK,EAAE,CAACL,YAAY;MAAEM,SAAS,GAAGD,EAAE,CAACC,SAAS;IAC9J,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,EAAER,YAAY,CAAC,IAAI,IAAI;IACnDO,KAAK,CAACE,IAAI,GAAG,aAAa;IAC1BF,KAAK,CAACb,aAAa,GAAGA,aAAa,IAAI,EAAE;IACzCa,KAAK,CAACZ,YAAY,GAAGA,YAAY,IAAI,EAAE;IACvCY,KAAK,CAACN,YAAY,GAAGA,YAAY,IAAI,IAAI;IACzCM,KAAK,CAACd,OAAO,GAAGO,YAAY,IAAIR,oBAAoB,CAACe,KAAK,CAAC;IAC3DA,KAAK,CAACD,SAAS,GAAGA,SAAS;IAC3BC,KAAK,CAACG,SAAS,GAAGP,WAAW,CAACQ,SAAS;IACvC,OAAOJ,KAAK;EAChB;EACA,OAAOJ,WAAW;AACtB,CAAC,CAACS,KAAK,CAAE;AACT,SAAST,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}